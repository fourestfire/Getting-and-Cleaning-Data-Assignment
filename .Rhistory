x <- df$datetime
y <- df$GAP
plot(x, y, type = "n")
x <- as.numeric(df$datetime)
plot(df$datetime, df$GAP)
str(df)
df <- testdf
df <- filter(data, Date == "2007-02-01" | Date == "2007-02-02")
## now let's combine date and time and convert it to an appropriate format
df$Date <- as.character(df$Date)
df$Time <- as.character(df$Time)
df <- mutate(df, datetime = paste(Date, Time))
df$datetime <- strptime(df$datetime, "%Y-%m-%d %H:%M:%S")
head(df)
str(df)
df$GAP <- as.numeric(as.character(df$Global_active_power))
hist(df$GAP, col = "red")
plot(df$datetime, df$GAP)
plot(df$datetime, df$GAP, type = "l")
x <- df$datetime
y <- df$GAP
plot(x, y, type = "l")
df$sub1 <- as.numeric(as.character(df$Sub_metering_1))
head(df)
df$sub2 <- as.numeric(as.character(df$Sub_metering_2))
df$sub3 <- as.numeric(as.character(df$Sub_metering_3))
head(df)
tail(df)
head(df, 100)
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n")
lines(x, y)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
hist(df$GAP, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
x <- df$datetime
y <- df$GAP
plot(x, y, type = "l", xlab = "", ylab = "Frequency")
plot(x, y, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
lines(x, y)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
str(df)
df$Voltage <- as.numeric(as.character(df$Voltage))
df$Global_reactive_power <- as.numeric(as.character(df$Global_reactive_power))
str(df)
?par
plot(df$datetime, df$Voltage)
plot(df$datetime, df$Voltage, type = "l")
plot(df$datetime, df$Voltage, type = "l")
plot(df$datetime, df$Global_reactive_power, type = "l")
df$sub1 <- as.numeric(as.character(df$Sub_metering_1))
df$sub2 <- as.numeric(as.character(df$Sub_metering_2))
df$sub3 <- as.numeric(as.character(df$Sub_metering_3))
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
lines(x, y)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
?legend
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
lines(x, y)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
legend(lty = 1)
legend("topright", legend = y, lty = 1)
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), lty = 1)
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
lines(x, y)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), lty = 1)
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue") lty = 1)
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1)
par(mfrow = c(2, 2))
plot(df$datetime, df$Global_reactive_power, type = "l")
plot(df$datetime, df$Voltage, type = "l")
plot(df$datetime, df$Voltage, type = "l")
plot(df$datetime, df$Voltage, type = "l")
plot(df$datetime, df$Voltage, type = "l")
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
lines(x, y)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1)
old.par <- par(mar = c(0, 0, 0, 0))
par(old.par)
plot(df$datetime, df$Global_reactive_power, type = "l")
plot(df$datetime, df$Global_reactive_power, type = "l")
par(mfrow = c(1,1))
plot(df$datetime, df$Global_reactive_power, type = "l")
df$Voltage <- as.numeric(as.character(df$Voltage))
Voltage <- df$Voltage
df$Global_reactive_power <- as.numeric(as.character(df$Global_reactive_power))
Global_reactive_power <- df$Global_reactive_power
datetime <- df$datetime
plot(datetime, Voltage, type = "l")
plot(datetime, Global_reactive_power, type = "l")
## set up the 2 by 2 plotting area
par(mfrow = c(2, 2))
##1st panel of 4th plot
hist(df$GAP, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
##2nd panel of 4th plot
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
lines(x, df$sub1)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1)
##3rd
plot(datetime, Voltage, type = "l")
##4th
plot(datetime, Global_reactive_power, type = "l")
## set up the 2 by 2 plotting area
par(mfcol = c(2, 2))
##1st panel of 4th plot
x <- df$datetime
y <- df$GAP
plot(x, y, type = "l", xlab = "", ylab = "Global Active Power")
##2nd panel of 4th plot
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
lines(x, df$sub1)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1)
##3rd
plot(datetime, Voltage, type = "l")
##4th
plot(datetime, Global_reactive_power, type = "l")
df$GAP <- as.numeric(as.character(df$Global_active_power))
hist(df$GAP, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
par(mfrow = c(1, 1))
df$GAP <- as.numeric(as.character(df$Global_active_power))
hist(df$GAP, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
dev.copy(png, file = "plot1.png")
dev.off()
x <- df$datetime
y <- df$GAP
plot(x, y, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
dev.copy(png, file = "plot2.png")
dev.off()
df$sub1 <- as.numeric(as.character(df$Sub_metering_1))
df$sub2 <- as.numeric(as.character(df$Sub_metering_2))
df$sub3 <- as.numeric(as.character(df$Sub_metering_3))
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
lines(x, df$sub1)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1)
dev.copy(png, file = "plot3.png")
dev.off()
df$Voltage <- as.numeric(as.character(df$Voltage))
Voltage <- df$Voltage
df$Global_reactive_power <- as.numeric(as.character(df$Global_reactive_power))
Global_reactive_power <- df$Global_reactive_power
datetime <- df$datetime
## set up the 2 by 2 plotting area
par(mfcol = c(2, 2))
##1st panel of 4th plot
x <- df$datetime
y <- df$GAP
plot(x, y, type = "l", xlab = "", ylab = "Global Active Power")
##2nd panel of 4th plot
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
lines(x, df$sub1)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1)
##3rd
plot(datetime, Voltage, type = "l")
##4th
plot(datetime, Global_reactive_power, type = "l")
dev.copy(png, file = "plot4.png")
dev.off()
par(mfrow = c(1, 1))
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1)
lines(x, df$sub1)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1)
lines(x, df$sub1)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1)
lines(x, df$sub1)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
dev.copy(png, file = "plot3.png")
dev.off()
df$Voltage <- as.numeric(as.character(df$Voltage))
Voltage <- df$Voltage
df$Global_reactive_power <- as.numeric(as.character(df$Global_reactive_power))
Global_reactive_power <- df$Global_reactive_power
datetime <- df$datetime
## set up the 2 by 2 plotting area
par(mfcol = c(2, 2))
##1st panel of 4th plot
x <- df$datetime
y <- df$GAP
plot(x, y, type = "l", xlab = "", ylab = "Global Active Power")
##2nd panel of 4th plot
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1)
lines(x, df$sub1)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
##3rd
plot(datetime, Voltage, type = "l")
##4th
plot(datetime, Global_reactive_power, type = "l")
dev.copy(png, file = "plot4.png")
dev.off()
par(mfrow = c(2, 2))
par(mfrow = c(1, 1))
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1)
lines(x, df$sub1)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
dev.copy(png, file = "plot3.png")
dev.off()
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1)
lines(x, df$sub1)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
dev.copy(png, file = "plot3.png")
dev.off()
x <- df$datetime
y <- df$GAP
plot(x, y, type = "l", xlab = "", ylab = "Global Active Power")
##2nd panel of 4th plot
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1, cex = 0.25)
lines(x, df$sub1)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
##3rd
plot(datetime, Voltage, type = "l")
##4th
plot(datetime, Global_reactive_power, type = "l")
dev.copy(png, file = "plot4.png")
dev.off()
par(mfrow = c(2, 2))
par(mfrow = c(1, 1))
df$Voltage <- as.numeric(as.character(df$Voltage))
Voltage <- df$Voltage
df$Global_reactive_power <- as.numeric(as.character(df$Global_reactive_power))
Global_reactive_power <- df$Global_reactive_power
datetime <- df$datetime
## set up the 2 by 2 plotting area
par(mfcol = c(2, 2))
##1st panel of 4th plot
x <- df$datetime
y <- df$GAP
plot(x, y, type = "l", xlab = "", ylab = "Global Active Power")
##2nd panel of 4th plot
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1, cex = 0.25)
lines(x, df$sub1)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
##3rd
plot(datetime, Voltage, type = "l")
##4th
plot(datetime, Global_reactive_power, type = "l")
dev.copy(png, file = "plot4.png")
dev.off()
par(mfrow = c(2, 2))
par(mfrow = c(1, 1))
df$Voltage <- as.numeric(as.character(df$Voltage))
Voltage <- df$Voltage
df$Global_reactive_power <- as.numeric(as.character(df$Global_reactive_power))
Global_reactive_power <- df$Global_reactive_power
datetime <- df$datetime
## set up the 2 by 2 plotting area
par(mfcol = c(2, 2))
##1st panel of 4th plot
x <- df$datetime
y <- df$GAP
plot(x, y, type = "l", xlab = "", ylab = "Global Active Power")
##2nd panel of 4th plot
x <- df$datetime
y <- df$sub1
plot(x, y, type = "n", xlab = "", ylab = "Energy sub metering")
legend("topright", legend = c("Sub_metering1", "Sub_metering2", "Sub_metering3"), col = c("black", "red", "blue"), lty = 1, cex = 0.5)
lines(x, df$sub1)
lines(x, df$sub2, col = "red")
lines(x, df$sub3, col = "blue")
##3rd
plot(datetime, Voltage, type = "l")
##4th
plot(datetime, Global_reactive_power, type = "l")
dev.copy(png, file = "plot4.png")
dev.off()
par(mfrow = c(2, 2))
par(mfrow = c(1, 1))
library(devtools)
install_github("pablobarbera/Rfacebook/Rfacebook")
library(Rfacebook)
require("Rfacebook")
fb_oauth <- fbOAuth(app_id="1398457867143036", app_secret="822d764ae239d03d3d6eb44f01fd37b6",extended_permissions = TRUE)
save(fb_oauth, file="fb_oauth")
load("fb_oauth")
me <- getUsers("me",token=fb_oauth)
head(me)
my_likes <- getLikes(user="me", token=fb_oauth)
my_likes
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
> library(nlme)
> library(lattice)
> xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
g
g <- g + geom_bar(stat="identity)
f
asdf
)
)0fdsa
fasd
f
fd
a
fjkl;jkads
))))))))))))))))))00
((9))
;
mage (in Thousands, USD)") +
ggtitle("Storm Impact to Economy") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma) +
mage (in Thousands, USD)") +
ggtitle("Storm Impact to Economy") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma) +
mage (in Thousands, USD)") +
ggtitle("Storm Impact to Economy") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma) +
coord_flip()
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
geom_point()
g <- g + geom_point()
g
str(movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
source("http://sna.stanford.edu/setup.R")
install.packages("lattice", repos = "http://cran.cnr.berkeley.edu/",
)
install.packages("lattice", repos = "http://cran.cnr.berkeley.edu/",
)
library(igraph)
swirl()
library(swirl)
swirl()
plot(sine)
?sine
??sine
??distribution
plot (k, dbinom(k, n, pi/10, log = TRUE), type = "l", ylab = "log density",
main = "dbinom(*, log=TRUE) is better than  log(dbinom(*))")
n <- 2000
k <- seq(0, n, by = 20)
plot (k, dbinom(k, n, pi/10, log = TRUE), type = "l", ylab = "log density",
main = "dbinom(*, log=TRUE) is better than  log(dbinom(*))")
n <- 2000
k <- seq(0, n, by = 20)
plot (k, dbinom(k, n, pi/10, log = TRUE), type = "l", ylab = "log density",
main = "dbinom(*, log=TRUE) is better than  log(dbinom(*))")
lines(k, log(dbinom(k, n, pi/10)), col = "red", lwd = 2)
## extreme points are omitted since dbinom gives 0.
mtext("dbinom(k, log=TRUE)", adj = 0)
mtext("extended range", adj = 0, line = -1, font = 4)
mtext("log(dbinom(k))", col = "red", adj = 1)
par(mfrow = c(2, 1))
x <- seq(-0.01, 5, 0.01)
plot(x, ppois(x, 1), type = "s", ylab = "F(x)", main = "Poisson(1) CDF")
plot(x, pbinom(x, 100, 0.01), type = "s", ylab = "F(x)",
main = "Binomial(100, 0.01) CDF")
setwd("C:/Users/dguo019/Desktop/code/R/UCI HAR Dataset")
xtest <- read.table("/test/X_test.txt")
xtest <- read.table("./test/X_test.txt")
dim(xtest)
ytest <- read.table("./test/Y_test.txt")
subject_test <- read.table("./test/subject_test.txt")
dim(ytest)
features <- read.table("./features.txt")
str(features)
head(features)
head(ytest)
head(xtest)
head(features)
head(subject_test)
head(ytest)
##xtrain <- read.table("./train/X_train.txt")
ytrain <- read.table("./train/Y_train.txt")
subject_train <- read.table("./test/subject_train.txt")
xtrain <- read.table("./train/X_train.txt")
ytrain <- read.table("./train/Y_train.txt")
subject_train <- read.table("./train/subject_train.txt")
?cbind
?rbind
x <- cbind(xtest, xtrain)
x <- rbind(xtest, xtrain)
y <- rbind(ytest, ytrain)
head(xtest)
head(subject_test)
subjects <- rbind(subject_test, subject_train)
activity_labels <- read.table("./activity_labels.txt")
rm(subject_test,subject_train,xtest,xtrain,ytest,ytrain)
head(features)
head(x)
head(y)
head(features)
row.names(x, V2$features)
head(V2$features)
head(features)
head(features$V2)
row.names(x, features$V2)
?row.names
featurerows <- as.character(features$V2)
head(featurerows)
row.names(x, featurerows)
row.names(x) <- features$V2
row.names(x) <- featurerows
dim(x)
head(x)
col.names(x) <- as.character(features$V2)
names(x) <- as.character(features$V2)
head(x)
rm(subject_test,subject_train,xtest,xtrain,ytest,ytrain,features)
head(y)
head(activity_label)
head(activity_labels)
head(y)
head(x)
head(subjects)
head(subjects$V1)
subjects[1]
head(subjects)
subjects[1,]
subjects[2,]
subjects[,1]
head(subjects)
y[1,]
length(y$V1)
summary(y)
head(y)
y$activity <- NULL
head(y)
y$activity <- "placeholder"
head(y)
y[which(y$V1 == 1),]
head(y)
?lookup
library(dplyr)
tbldf(x)
tbl(x)
tbl_df(x)
x
asdf
